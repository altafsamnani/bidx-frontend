<?php

$investorDetails = $this->exst ($this->data->bidxInvestorProfile);


if ($investorDetails &&
    ( $investorDetails->bidxEntityStatus == 'PUBLISHED' || $investorDetails->bidxCanEdit  ) ) {

    $investorType = $this->exst ($investorDetails->investorType);
?>

    <div class="well profile-block details-block">

        <div class="btn-group control-buttons">
            <?php if ($investorDetails->bidxCanEdit) { ?>
                <a class="btn btn-primary" href="#editInvestor/<?php echo $this->exst ($investorDetails->ownerId); ?>"><?php _e('Edit'); ?></a>

                    <?php
                        if ($investorDetails->bidxEntityStatus == 'DRAFT') {

                            // Encode the missing fields into an attribute so we can provide a nice
                            // UI feedback in the implementation of the publish button
                            //
                            // TODO: this is of couse only for the fields we know are going to be
                            // missed and fail. This is not helping for the actual publishing which
                            // might pop up with all kinds of errors. That should be handled in the
                            // front-end when actually doing the publishing
                            //
                            $missingFields = array();

                            $missingFieldsAttribute = count($missingFields)
                                ? sprintf( 'data-missingfields=\'%s\'', json_encode($missingFields) )
                                : ''
                            ;
                    ?>
                <a class="btn btn-primary" href="#publish/<?php echo $this->exst ($investorDetails->bidxEntityId); ?>" <?php echo $missingFieldsAttribute; ?>>Publish</a>
                    <?php
                        }
                    }
                    ?>
        </div>

        <h4>Investor profile</h4>
<?php

        // Summary
        //
        $rowValues = array (__('Investor profile summary') => $this->exst ($investorDetails->summary));
        echo $this->addRowsWithLabelBelow ('span12', 'span12', $rowValues, array ('tag_label' => 'label'));

?>
        <div class="row-fluid">
            <div class="span8">
<?php

        // Investor type
        //
        $rowValues = array (__('Investor type') => $investorType );
        echo $this->addRowsWithLabelAdjacent ('span6', 'span6', $rowValues, array ('tag_label' => 'label', 'class_value' => ''));

        // Investment type
        //
        $values = $this->getMultiValues($this->exst( $investorDetails->investmentType ), ', ');
        $rowValues = array ( __('Investment types') => $values);
        echo $this->addRowsWithLabelAdjacent ('span6', 'span6', $rowValues, array ('tag_label' => 'label', 'class_value' => ''));
?>
            </div>
            <div class="span4"><!-- NOOP --></div>
        </div>

        <div class="row-fluid">
            <div class="span8">
<?php

        // A set of properties is only applicable to any other type than Angel or private
        //
        if ( $investorType && $investorType != 'AngelInvPrivIndiv' ) {

            // Institution name
            //
            $rowValues = array (__('Institution details') => $this->exst($investorDetails->institutionName));
            echo $this->addRowsWithLabelAdjacent ('span6', 'span6', $rowValues, array ('tag_label' => 'label', 'class_value' => ''));

            // Institution website
            //
            $rowValues = array (__('Institution website') => $this->exst($investorDetails->institutionWebsite));
            echo $this->addRowsWithLabelAdjacent ('span6', 'span6', $rowValues, array ('tag_label' => 'label', 'class_value' => ''));

            // Institution address
            //
            $address = '';
            if ($this->exst ($investorDetails->institutionAddress )) {

                $instituationAddress = $investorDetails->institutionAddress;

                $street = $this->exst ($institutionAddress->street,'');
                $streetNumber = $this->exst ($institutionAddress->streetNumber,'');
                $cityTown = $this->exst ($institutionAddress->cityTown,'');
                $postalCode = $this->exst ($institutionAddress->postalCode,'');

                $addressArr = array ($street . ' ' . $streetNumber,
                  $cityTown,
                  __('country') => $institutionAddress->country,
                  $institutionAddress->postalCode);

                $address = $this->createRowValue ($addressArr, ', ');

                $rowValues = array (__('Address') => $address );
                echo $this->addRowsWithLabelAdjacent ('span6', 'span6', $rowValues, array ('tag_label' => 'label', 'class_value' => ''));
            }
        }
?>

<?php
            $multiValueProperties = array(
                __('Industry')              =>  $this->exst ($investorDetails->focusIndustry),
                __('Social impact')         =>  $this->exst ($investorDetails->focusSocialImpact),
                __('Enviromental impact')   =>  $this->exst ($investorDetails->focusEnvImpact),
                __('Consumer type')         =>  $this->exst ($investorDetails->focusConsumerType),
                __('Languages')             =>  $this->exst ($investorDetails->focusLanguage),
                __('Countries')             =>  $this->exst ($investorDetails->focusCountry),
                __('Stage of business')     =>  $this->exst ($investorDetails->focusStageBusiness),
                __('Gender')                =>  $this->exst ($investorDetails->focusGender),
            );

            foreach ( $multiValueProperties as $k => $v ) {
                $values = $this->getMultiValues($v, ', ');
                $rowValues = array ( $k => $values);
                echo $this->addRowsWithLabelAdjacent ('span6', 'span6', $rowValues, array ('tag_label' => 'label', 'class_value' => ''));
            }

            // The focusCity property exists of an array of objects having the following properties:
            // - cityTown
            // - country (optional)
            //
            // Convert the array of objects into a single array and make a row out of it
            //
            $focusCities = array();
            if ($this->exst ($investorDetails->focusCity)) {

                foreach ($investorDetails->focusCity as $focusCity ) {
                    if ($this->exst ($focusCity->cityTown)) {
                        $focusCities[] = $focusCity->cityTown;
                    }
                }

                $rowValues = array( __('City') => $this->getMultiValues( $focusCities, ', ' ) );

                echo $this->addRowsWithLabelAdjacent ('span6', 'span6', $rowValues, array ('tag_label' => 'label', 'class_value' => ''));
            }

            // Investment size
            //
            $investmentSize = array(
                $this->exst( $investorDetails->minInvestment, '' ),
                $this->exst( $investorDetails->maxInvestment, '' )
            );

            $rowValues = array (__('Investment size') => implode( $investmentSize, ' - ' ) );
            echo $this->addRowsWithLabelAdjacent ('span6', 'span6', $rowValues, array ('tag_label' => 'label', 'class_value' => ''));

            // Typical involvement
            //
            $typicalInvolvement = $this->exst ($investorDetails->typicalInvolvement);
            $rowValues = array (__('Typical involvement') => $typicalInvolvement);
            echo $this->addRowsWithLabelAdjacent ('span6', 'span6', $rowValues, array ('tag_label' => 'label', 'class_value' => ''));
?>
            </div>
            <div class="span4">
                reach
            </div>
        </div>
<?php
            // Additional Preferences
            //
            $rowValues = array (__('Other preferences') => $this->exst ($investorDetails->additionalPreferences));
            echo $this->addRowsWithLabelBelow ('span12', 'span12', $rowValues, array ('tag_label' => 'label'));

?>

        <div class="row-fluid">
            <div class="span8">
<?php

            // Number Investments
            //
            $rowValues = array (__('Number of investments in the last 12 months') => $this->exst( $investorDetails->numberInvestments ));
            echo $this->addRowsWithLabelAdjacent ('span6', 'span6', $rowValues, array ('tag_label' => 'label', 'class_value' => ''));

            // Total Investments
            //
            $rowValues = array (__('Total investments made in the last 12 months') => $this->exst( $investorDetails->totalInvestment ));
            echo $this->addRowsWithLabelAdjacent ('span6', 'span6', $rowValues, array ('tag_label' => 'label', 'class_value' => ''));
?>
            </div>
            <div class="span4"><!-- NOOP --></div>
        </div>
<?php
            // Previous investments
            //
            echo '<h5>' . __('Previous investments') . '</h5>';

            $header = array(
                __('Name of Company')           => 'companyName',
                __('Amount invested')           => 'investment',
                __('Investment type')           => 'investmentType',
                __('URL of Company website')    => 'companyWebsite'
            );

            echo $this->addTableRows($header, $this->exst( $investorDetails->previousInvestments ), 'table table-bordered' );

            echo $this->getAttachmentsDisplay ('12', '12', array ('Documents' => $this->exst ($investorDetails->attachment)));

            // TODO: list references (personaldetails)
?>
    </div><!-- // details-block of investor -->
<?php
}
?>




